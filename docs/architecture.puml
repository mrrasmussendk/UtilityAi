@startuml
' Utility-AI Orchestrator Architecture (Blackboard + Utility AI)
' Reflects current codebase as of 2025-10-13

skinparam componentStyle rectangle
skinparam monochrome true
skinparam shadowing false

package "UtilityAi (Framework Core)" {
  [EventBus] as EventBus
  [Runtime] as Runtime
  [Proposal] as Proposal
  [Considerations] as Considerations
  [ISensor] as ISensor
  [ICapabilityModule] as ICapabilityModule
  [UtilityAiOrchestrator] as Orchestrator
  [ISelectionStrategy\nMaxUtilitySelection] as Selection
  [UserIntent\n- IntentGoal\n- Slots: IDictionary<string, object?>\n- IntentConstraints] as UserIntent
}

package "Example (Demo App)" {
  [TopicSensor] as TopicSensor
  [IntentSensor] as IntentSensor
  ' Optional legacy sensor (alternative to IntentSensor)
  ' [OutputSensor] as OutputSensor
  [SearchAndSummarizeModule] as SearchModule
  [SummaryToOutputAdapter] as SummaryToOutputAdapter
  [OutputModule] as OutputModule
  [NewsSearchAction] as NewsSearchAction
  [SummarizerAction] as SummarizerAction
  [TwilloOutputAction] as TwilloAction
  [SignalOutputMode] as SignalOutputMode
  [Topic] as Topic
  [Summary] as Summary
  [OutputTextMessage] as OutputTextMessage
  [SearchResults] as SearchResults
}

' Core relationships
UserIntent -d-> Runtime : provided to
EventBus -d-> Runtime : provided to
Runtime -u-> Orchestrator : passed into ticks

ISensor -r-> EventBus : Publish<T>() facts
ICapabilityModule -r-> Proposal : returns
Considerations -d-> Proposal : scored by
Selection -d-> Orchestrator : choose proposal

Orchestrator -d-> ISensor : Sense()
Orchestrator -d-> ICapabilityModule : Propose()
Orchestrator -d-> Proposal : Score -> Act()
Proposal -r-> EventBus : actions publish facts

' Example wiring
IntentSensor -r-> EventBus : publish SignalOutputMode
' OutputSensor -r-> EventBus : publish SignalOutputMode
TopicSensor -r-> EventBus : publish Topic
SummaryToOutputAdapter -r-> EventBus : publish OutputTextMessage

SearchModule -r-> Proposal : news.search / news.summarize
OutputModule -r-> Proposal : output.sendSms

NewsSearchAction -r-> SearchModule
SummarizerAction -r-> SearchModule
TwilloAction -r-> OutputModule

' Facts on the bus (type-indexed latest)
SignalOutputMode -u-> EventBus
Topic -u-> EventBus
SearchResults -u-> EventBus
Summary -u-> EventBus
OutputTextMessage -u-> EventBus

' Flow annotation
note top of Orchestrator
Sense -> Propose -> Score -> Act
(Utility = BaseScore * product(considerations))
end note

' Intent handling annotation
note right of UserIntent
Framework keeps intent generic:
- Goal (string name)
- Slots (key/object)
- Constraints (optional)
Example sensors translate
slots to typed facts.
end note

@enduml
